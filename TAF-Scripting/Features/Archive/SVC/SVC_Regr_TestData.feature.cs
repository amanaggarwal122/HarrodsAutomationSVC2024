// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TAF_Scripting.Features.Archive.SVC
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SVCRegressionTestDataCreation")]
    public partial class SVCRegressionTestDataCreationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "SVC_Regr_TestData.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SVCRegressionTestDataCreation", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("006_TestdataCreation_RegNonRewardsUserEmailConsentYes_In_SSC")]
        [NUnit.Framework.CategoryAttribute("Testdata")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("006_TestdataCreation_RegNonRewardsUserEmailConsentYes_In_SSC")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC006", null)]
        public virtual void _006_TestdataCreation_RegNonRewardsUserEmailConsentYes_In_SSC(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Testdata",
                    "TestDataCreation",
                    "006_TestdataCreation_RegNonRewardsUserEmailConsentYes_In_SSC"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("006_TestdataCreation_RegNonRewardsUserEmailConsentYes_In_SSC", null, @__tags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
    testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 7
 testRunner.Then(string.Format("I Perform Non Reward User Registration in SSC and write to Input Excelsheet \"{0}\"" +
                            " \"{1}\" for \"{2}\"", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 8
 testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("008_Lite_account_NewuserSignup")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("008_Lite_account_NewuserSignup")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC008", null)]
        public virtual void _008_Lite_Account_NewuserSignup(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "008_Lite_account_NewuserSignup"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("008_Lite_account_NewuserSignup", null, @__tags);
#line 15
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 16
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 17
 testRunner.When("I click on  signup to email button under footer of Harrods.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 18
 testRunner.And(string.Format("I Perform SignUp action with new user From Harrods.com and write to Input Excelsh" +
                            "eet \"{0}\" \"{1}\" for \"{2}\"", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("I perform email validation from yopmail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("010_TestdataCreation_RegNonRewardsUserEmailConsentNo_In_SSC")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("010_TestdataCreation_RegNonRewardsUserEmailConsentNo_In_SSC")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC010", null)]
        public virtual void _010_TestdataCreation_RegNonRewardsUserEmailConsentNo_In_SSC(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "010_TestdataCreation_RegNonRewardsUserEmailConsentNo_In_SSC"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("010_TestdataCreation_RegNonRewardsUserEmailConsentNo_In_SSC", null, @__tags);
#line 28
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 29
    testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 30
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 31
 testRunner.Then(string.Format("I Perform Non Reward User Registration in SSC and write to Input Excelsheet \"{0}\"" +
                            " \"{1}\" for \"{2}\"", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 32
 testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("012_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeGold_In_SSC")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("012_TestdataCreation_RegNonRewardsUserEmailConsentAndTierUpgradeGoldYes_In_SSC")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC012", "yes", null)]
        public virtual void _012_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeGold_In_SSC(string excelFile, string sheetName, string testCase, string emailConsent, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "012_TestdataCreation_RegNonRewardsUserEmailConsentAndTierUpgradeGoldYes_In_SSC"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("012_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeGold_In_SSC", null, @__tags);
#line 39
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 40
    testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 41
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 42
 testRunner.Then("I Perform Non Reward User Registration in SSC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.Then(string.Format("I upgrade the user to \"Gold\" tier and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 44
 testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("013_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeBlack_In_SSC")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("013_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeBlack_In_SSC")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC013", "yes", null)]
        public virtual void _013_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeBlack_In_SSC(string excelFile, string sheetName, string testCase, string emailConsent, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "013_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeBlack_In_SSC"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("013_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeBlack_In_SSC", null, @__tags);
#line 51
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 52
    testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 53
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 54
 testRunner.Then("I Perform Non Reward User Registration in SSC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
 testRunner.Then(string.Format("I upgrade the user to \"Black\" tier and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
 testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("014_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeElite_In_SSC")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("014_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeElite_In_SSC")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC014", "yes", null)]
        public virtual void _014_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeElite_In_SSC(string excelFile, string sheetName, string testCase, string emailConsent, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "014_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeElite_In_SSC"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("014_TestdataCreation_RegNonRewardsUserEmailConsentYesAndTierUpgradeElite_In_SSC", null, @__tags);
#line 63
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 64
    testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 65
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 66
 testRunner.Then("I Perform Non Reward User Registration in SSC", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.Then(string.Format("I upgrade the user to \"Elite\" tier and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 68
 testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("015_Lite_account_NewuserSignup")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("015_Lite_account_NewuserSignup")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC015", null)]
        public virtual void _015_Lite_Account_NewuserSignup(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "015_Lite_account_NewuserSignup"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("015_Lite_account_NewuserSignup", null, @__tags);
#line 75
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 76
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 77
 testRunner.When("I click on  signup to email button under footer of Harrods.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 78
 testRunner.And(string.Format("I Perform SignUp action with new user From Harrods.com and write to Input Excelsh" +
                            "eet \"{0}\" \"{1}\" for \"{2}\"", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And("I perform email validation from yopmail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
 testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("025_ExistingFullRewardsUserCardNewEmail_FullRewardHarrodsReg_EmailConsentYes")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("025_ExistingFullRewardsUserCardNewEmail_FullRewardHarrodsReg_EmailConsentYes")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC025", null)]
        public virtual void _025_ExistingFullRewardsUserCardNewEmail_FullRewardHarrodsReg_EmailConsentYes(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "025_ExistingFullRewardsUserCardNewEmail_FullRewardHarrodsReg_EmailConsentYes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("025_ExistingFullRewardsUserCardNewEmail_FullRewardHarrodsReg_EmailConsentYes", null, @__tags);
#line 87
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 88
testRunner.Given(string.Format("I create Rewards customer in SSC and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 89
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("026_EmailFromNonReward_CardFromReward_FullRewardHarrodsReg_EmailConsentYes")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("026_EmailFromNonReward_CardFromReward_FullRewardHarrodsReg_EmailConsentYes")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC026", null)]
        public virtual void _026_EmailFromNonReward_CardFromReward_FullRewardHarrodsReg_EmailConsentYes(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "026_EmailFromNonReward_CardFromReward_FullRewardHarrodsReg_EmailConsentYes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("026_EmailFromNonReward_CardFromReward_FullRewardHarrodsReg_EmailConsentYes", null, @__tags);
#line 96
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 97
testRunner.Given(string.Format("I create Non Rewards customer in SSC and write to Input Excelsheet {0} {1} for {2" +
                            "}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 98
testRunner.Then(string.Format("I create Rewards customer in SSC and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 99
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("028_NonReward_HarrodsJoinRewardWithoutCardData")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("028_NonReward_HarrodsJoinRewardWithoutCardData")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC028", null)]
        public virtual void _028_NonReward_HarrodsJoinRewardWithoutCardData(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "028_NonReward_HarrodsJoinRewardWithoutCardData"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("028_NonReward_HarrodsJoinRewardWithoutCardData", null, @__tags);
#line 106
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 107
testRunner.Given(string.Format("I create Non Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 108
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("031_FullRewardHarrodsCheckOutRegistrationWithNonLoyalityUserEmail")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("031_FullRewardHarrodsCheckOutRegistrationWithNonLoyalityUserEmail")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC031", null)]
        public virtual void _031_FullRewardHarrodsCheckOutRegistrationWithNonLoyalityUserEmail(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "031_FullRewardHarrodsCheckOutRegistrationWithNonLoyalityUserEmail"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("031_FullRewardHarrodsCheckOutRegistrationWithNonLoyalityUserEmail", null, @__tags);
#line 115
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 116
testRunner.Given(string.Format("I create Non Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 117
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("033_Reg_NonRewardCustomer_EnableEmailConsent_Yes")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("033_Reg_NonRewardCustomer_EnableEmailConsent_Yes")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC033", null)]
        public virtual void _033_Reg_NonRewardCustomer_EnableEmailConsent_Yes(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "033_Reg_NonRewardCustomer_EnableEmailConsent_Yes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("033_Reg_NonRewardCustomer_EnableEmailConsent_Yes", null, @__tags);
#line 124
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 125
testRunner.Given(string.Format("I create Non Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 126
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("034_Reg_NonRewardCustomer_EnableSMSConsent_Yes")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("034_Reg_NonRewardCustomer_EnableSMSConsent_Yes")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC034", null)]
        public virtual void _034_Reg_NonRewardCustomer_EnableSMSConsent_Yes(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "034_Reg_NonRewardCustomer_EnableSMSConsent_Yes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("034_Reg_NonRewardCustomer_EnableSMSConsent_Yes", null, @__tags);
#line 133
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 134
testRunner.Given(string.Format("I create Non Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 135
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("035_Reg_NonRewardCustomer_EnablePostalConsent_Yes")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("035_Reg_NonRewardCustomer_EnablePostalConsent_Yes")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC035", null)]
        public virtual void _035_Reg_NonRewardCustomer_EnablePostalConsent_Yes(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "035_Reg_NonRewardCustomer_EnablePostalConsent_Yes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("035_Reg_NonRewardCustomer_EnablePostalConsent_Yes", null, @__tags);
#line 142
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 143
testRunner.Given(string.Format("I create Non Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 144
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("036_Reg_NonRewardCustomer_EnablePhoneConsent_Yes")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("036_Reg_NonRewardCustomer_EnablePhoneConsent_Yes")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC036", null)]
        public virtual void _036_Reg_NonRewardCustomer_EnablePhoneConsent_Yes(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "036_Reg_NonRewardCustomer_EnablePhoneConsent_Yes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("036_Reg_NonRewardCustomer_EnablePhoneConsent_Yes", null, @__tags);
#line 151
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 152
testRunner.Given(string.Format("I create Non Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 153
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("037_Reg_NonRewardCustomer_WithSMSConsent_RemoveInterest_partially")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("037_Reg_NonRewardCustomer_WithSMSConsent_RemoveInterest_partially")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC037", null)]
        public virtual void _037_Reg_NonRewardCustomer_WithSMSConsent_RemoveInterest_Partially(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "037_Reg_NonRewardCustomer_WithSMSConsent_RemoveInterest_partially"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("037_Reg_NonRewardCustomer_WithSMSConsent_RemoveInterest_partially", null, @__tags);
#line 160
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 161
testRunner.Given(string.Format("I create Non Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 162
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("038_Reg_NonRewardCustomer_EnableAllChannelConsentYes_MixedSelectionOnInterests")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("038_Reg_NonRewardCustomer_EnableAllChannelConsentYes_MixedSelectionOnInterests")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC038", null)]
        public virtual void _038_Reg_NonRewardCustomer_EnableAllChannelConsentYes_MixedSelectionOnInterests(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "038_Reg_NonRewardCustomer_EnableAllChannelConsentYes_MixedSelectionOnInterests"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("038_Reg_NonRewardCustomer_EnableAllChannelConsentYes_MixedSelectionOnInterests", null, @__tags);
#line 169
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 170
testRunner.Given(string.Format("I create Non Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 171
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("039_Reg_LoyaltyRewardCustomerG0/G1_EnableEmailConsentYes_JoinMiniHarrods")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("039_Reg_LoyaltyRewardCustomerG0/G1_EnableEmailConsentYes_JoinMiniHarrods")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC039", null)]
        public virtual void _039_Reg_LoyaltyRewardCustomerG0G1_EnableEmailConsentYes_JoinMiniHarrods(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "039_Reg_LoyaltyRewardCustomerG0/G1_EnableEmailConsentYes_JoinMiniHarrods"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("039_Reg_LoyaltyRewardCustomerG0/G1_EnableEmailConsentYes_JoinMiniHarrods", null, @__tags);
#line 179
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 180
testRunner.Given(string.Format("I create Loyalty Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 181
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("040_Reg_LoyaltyRewardCustomerG0/G1_consentPost_and_Harrodsmagazine")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("040_Reg_LoyaltyRewardCustomerG0/G1_consentPost_and_Harrodsmagazine")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC040", null)]
        public virtual void _040_Reg_LoyaltyRewardCustomerG0G1_ConsentPost_And_Harrodsmagazine(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "040_Reg_LoyaltyRewardCustomerG0/G1_consentPost_and_Harrodsmagazine"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("040_Reg_LoyaltyRewardCustomerG0/G1_consentPost_and_Harrodsmagazine", null, @__tags);
#line 188
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 189
testRunner.Given(string.Format("I create Loyalty Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 190
testRunner.When("I add UK address for the user created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 191
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("041_Loyaltyrewards_Goldcustomer_EmailConsent_Yes")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("041_Loyaltyrewards_Goldcustomer_EmailConsent_Yes")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC041", null)]
        public virtual void _041_Loyaltyrewards_Goldcustomer_EmailConsent_Yes(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "041_Loyaltyrewards_Goldcustomer_EmailConsent_Yes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("041_Loyaltyrewards_Goldcustomer_EmailConsent_Yes", null, @__tags);
#line 198
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 199
testRunner.Given(string.Format("I create Loyalty Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 200
testRunner.When("I mark Consent as \"Yes\" for Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 201
testRunner.Then(string.Format("I upgrade the user to \"Gold\" tier and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 202
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("042_Loyaltyrewards_Goldcustomer_PostalandMagazineConsent_Yes")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("042_Loyaltyrewards_Goldcustomer_PostalandMagazineConsent_Yes")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC042", null)]
        public virtual void _042_Loyaltyrewards_Goldcustomer_PostalandMagazineConsent_Yes(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "042_Loyaltyrewards_Goldcustomer_PostalandMagazineConsent_Yes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("042_Loyaltyrewards_Goldcustomer_PostalandMagazineConsent_Yes", null, @__tags);
#line 209
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 210
testRunner.Given(string.Format("I create Loyalty Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 211
testRunner.When("I mark Consent as \"Yes\" for Postal, Magazine", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 212
testRunner.Then(string.Format("I upgrade the user to \"Gold\" tier and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 213
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("043_Loyaltyrewards_Goldcustomer_signedMiniHarrods_emailconsent_removesallinterest" +
            "s")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("043_Loyaltyrewards_Goldcustomer_signedMiniHarrods_emailconsent_removesallinterest" +
            "s")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC043", null)]
        public virtual void _043_Loyaltyrewards_Goldcustomer_SignedMiniHarrods_Emailconsent_Removesallinterests(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "043_Loyaltyrewards_Goldcustomer_signedMiniHarrods_emailconsent_removesallinterest" +
                        "s"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("043_Loyaltyrewards_Goldcustomer_signedMiniHarrods_emailconsent_removesallinterest" +
                    "s", null, @__tags);
#line 220
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 221
testRunner.Given(string.Format("I create Loyalty Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 222
testRunner.When("I mark Consent as \"Yes\" for Email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 223
testRunner.Then(string.Format("I upgrade the user to \"Gold\" tier and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 224
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("044_Loyaltyrewards_Goldcustomer_signedMiniHarrods_selectedHarrodsmagazine_removes" +
            "Allchannelconsent")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("044_Loyaltyrewards_Goldcustomer_signedMiniHarrods_selectedHarrodsmagazine_removes" +
            "Allchannelconsent")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC044", null)]
        public virtual void _044_Loyaltyrewards_Goldcustomer_SignedMiniHarrods_SelectedHarrodsmagazine_RemovesAllchannelconsent(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "044_Loyaltyrewards_Goldcustomer_signedMiniHarrods_selectedHarrodsmagazine_removes" +
                        "Allchannelconsent"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("044_Loyaltyrewards_Goldcustomer_signedMiniHarrods_selectedHarrodsmagazine_removes" +
                    "Allchannelconsent", null, @__tags);
#line 231
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 232
testRunner.Given(string.Format("I create Loyalty Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 233
testRunner.When("I add UK address for the user created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 234
testRunner.And("I mark Consent as \"Yes\" for Email,SMS,POST", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 235
testRunner.Then(string.Format("I upgrade the user to \"Gold\" tier and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 236
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("097_Existing_LoyaltyRewardsCustomer_AddMultipleChildToCustomerAccount")]
        [NUnit.Framework.CategoryAttribute("TestDataCreation")]
        [NUnit.Framework.CategoryAttribute("097_Existing_LoyaltyRewardsCustomer_AddMultipleChildToCustomerAccount")]
        [NUnit.Framework.TestCaseAttribute("SVCTestDataCreation", "G01", "TC097", null)]
        public virtual void _097_Existing_LoyaltyRewardsCustomer_AddMultipleChildToCustomerAccount(string excelFile, string sheetName, string testCase, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TestDataCreation",
                    "097_Existing_LoyaltyRewardsCustomer_AddMultipleChildToCustomerAccount"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("097_Existing_LoyaltyRewardsCustomer_AddMultipleChildToCustomerAccount", null, @__tags);
#line 243
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 244
testRunner.Given(string.Format("I create Loyalty Rewards customer and write to Input Excelsheet {0} {1} for {2}", excelFile, sheetName, testCase), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 245
testRunner.Then("I close the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
