// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TAF_Scripting.Features.Archive.AmanArea
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Miscelleneous_Regression")]
    public partial class Miscelleneous_RegressionFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "Miscelleneous_Regression.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Miscelleneous_Regression", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_028_NonReward_HarrodsJoinRewardWithoutCardData")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("028_NonReward_HarrodsJoinRewardWithoutCardData")]
        [NUnit.Framework.TestCaseAttribute("TC_028_NonReward_HarrodsJoinRewardWithoutCardData", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_028_NonReward_HarrodsJoinRewardWithoutCardData(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "028_NonReward_HarrodsJoinRewardWithoutCardData"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_028_NonReward_HarrodsJoinRewardWithoutCardData", null, @__tags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When(string.Format("I perform new user registration for \"{0}\" and update details to excel \"{1}\" and \"" +
                            "{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.When(string.Format("I perform join rewards as \"{0}\" from Harrods.com without rewards card data \"{1}\" " +
                            "and \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 9
 testRunner.Then(string.Format("I validate user \"{0}\" is able to join rewards from Harrods.com without rewards ca" +
                            "rd data \"{1}\" and \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 10
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_029_NonReward_HarrodsJoinRewardWithGhostPremiumPointsCard")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("029_NonReward_HarrodsJoinRewardWithGhostPremiumPointsCard")]
        [NUnit.Framework.TestCaseAttribute("TC_029_NonReward_HarrodsJoinRewardWithGhostPremiumPointsCard", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_029_NonReward_HarrodsJoinRewardWithGhostPremiumPointsCard(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "029_NonReward_HarrodsJoinRewardWithGhostPremiumPointsCard"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_029_NonReward_HarrodsJoinRewardWithGhostPremiumPointsCard", null, @__tags);
#line 19
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 20
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 21
 testRunner.When(string.Format("I perform new user registration for \"{0}\" and update details to excel \"{1}\" and \"" +
                            "{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 22
 testRunner.When(string.Format("I perform join rewards as \"{0}\" from Harrods.com with ghost rewards card data \"{1" +
                            "}\" and \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 23
 testRunner.Then(string.Format("I validate user \"{0}\" is able to join rewards from Harrods.com with rewards card " +
                            "data \"{1}\" and \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_096_EnrollToMiniHarrodsFromOnline")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("096_EnrollToMiniHarrodsFromOnline")]
        [NUnit.Framework.TestCaseAttribute("FullRewardUserD DHYA", "fullrewarduserdhya2024@gmail.com", null)]
        public virtual void TC_096_EnrollToMiniHarrodsFromOnline(string userName, string email, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "096_EnrollToMiniHarrodsFromOnline"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_096_EnrollToMiniHarrodsFromOnline", null, @__tags);
#line 33
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 34
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 35
 testRunner.When(string.Format("I enroll \"{0}\" \"{1}\" to mini harrods from Harrods.com", userName, email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 36
 testRunner.Then(string.Format("I should validate enrolled \"{0}\" \"{1}\" child is showing on Harrods.com", userName, email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 37
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_100_Edit/remove_MiniHarrodsinterest_of_customer_through_Harrods")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("100_Edit/remove_MiniHarrodsinterest_of_customer_through_Harrods")]
        [NUnit.Framework.TestCaseAttribute("FullRewardUserD DHYA", "fullrewarduserdhya2024@gmail.com", null)]
        public virtual void TC_100_EditRemove_MiniHarrodsinterest_Of_Customer_Through_Harrods(string userName, string email, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "100_Edit/remove_MiniHarrodsinterest_of_customer_through_Harrods"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_100_Edit/remove_MiniHarrodsinterest_of_customer_through_Harrods", null, @__tags);
#line 45
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 46
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 48
 testRunner.When(string.Format("I enroll \"{0}\" \"{1}\" to mini harrods from Harrods.com", userName, email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.And("I click on MiniHarrods", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.And("I validate that remove miniharrods interest is updated in Harrods.com \"<UserCateg" +
                        "ory>\" \"<ExcelFile>\" \"<SheetName>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_119_Existing_LoyaltyRewardsCustomer_allowedtoaddmorethan4child")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("119_Existing_LoyaltyRewardsCustomer_allowedtoaddmorethan4child")]
        [NUnit.Framework.TestCaseAttribute("TC_119_Existing_LoyaltyRewardsCustomer_allowedtoaddmorethan4child", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_119_Existing_LoyaltyRewardsCustomer_Allowedtoaddmorethan4Child(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "119_Existing_LoyaltyRewardsCustomer_allowedtoaddmorethan4child"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_119_Existing_LoyaltyRewardsCustomer_allowedtoaddmorethan4child", null, @__tags);
#line 61
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 62
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 63
 testRunner.When(string.Format("I login to Harrods with a \"{0}\" user from \"{1}\" \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 64
 testRunner.When("I enroll \"<UserName>\" \"<Email>\" to mini harrods from Harrods.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 65
 testRunner.And("I click on MiniHarrods", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.And(string.Format("I validate more than four child cannot be added in miniharrods from Harrods.com \"" +
                            "{0}\" \"{1}\" \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_162_CST_Customer_SetBillingAddress")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("162_CST_Customer_SetBillingAddress")]
        [NUnit.Framework.TestCaseAttribute("TC_162_CST_Customer_SetBillingAddress", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_162_CST_Customer_SetBillingAddress(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "162_CST_Customer_SetBillingAddress"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_162_CST_Customer_SetBillingAddress", null, @__tags);
#line 75
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 76
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 77
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 78
 testRunner.Then(string.Format("I select a non billing address and change it to Billing Address and save in SSC {" +
                            "0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_166_NonReward_HarrodsReg_EmailConsentYes")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G02")]
        [NUnit.Framework.CategoryAttribute("166_NonReward_HarrodsReg_EmailConsentYes")]
        [NUnit.Framework.TestCaseAttribute("TC_166_NonReward_HarrodsReg_EmailConsentYes", "TestDataSSCRegressionUpgrade", "G02", null)]
        public virtual void TC_166_NonReward_HarrodsReg_EmailConsentYes(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G02",
                    "166_NonReward_HarrodsReg_EmailConsentYes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_166_NonReward_HarrodsReg_EmailConsentYes", null, @__tags);
#line 87
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 88
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 89
 testRunner.When(string.Format("I perform new user registration for \"{0}\" and update details to excel \"{1}\" and \"" +
                            "{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 91
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_167_FullReward_HarrodsReg_EmailConsentYes")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G02")]
        [NUnit.Framework.CategoryAttribute("167_FullReward_HarrodsReg_EmailConsentYes")]
        [NUnit.Framework.TestCaseAttribute("TC_167_FullReward_HarrodsReg_EmailConsentYes", "TestDataSSCRegressionUpgrade", "G02", null)]
        public virtual void TC_167_FullReward_HarrodsReg_EmailConsentYes(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G02",
                    "167_FullReward_HarrodsReg_EmailConsentYes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_167_FullReward_HarrodsReg_EmailConsentYes", null, @__tags);
#line 99
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 100
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 101
 testRunner.When(string.Format("I perform new user registration for \"{0}\" and update details to excel \"{1}\" and \"" +
                            "{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 102
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_168_ExistingNonLoyalty_FullReward_HarrodsReg_EmailConsentYes")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("168_ExistingNonLoyalty_FullReward_HarrodsReg_EmailConsentYes")]
        [NUnit.Framework.TestCaseAttribute("TC_168_ExistingNonLoyalty_FullReward_HarrodsReg_EmailConsentYes", "TestDataSSCRegressionUpgrade", "G02", null)]
        public virtual void TC_168_ExistingNonLoyalty_FullReward_HarrodsReg_EmailConsentYes(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "168_ExistingNonLoyalty_FullReward_HarrodsReg_EmailConsentYes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_168_ExistingNonLoyalty_FullReward_HarrodsReg_EmailConsentYes", null, @__tags);
#line 110
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 111
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 112
 testRunner.When(string.Format("I perform and validate existing Non rewards \"{0}\" customer register from Harrods." +
                            "com by fetching data from \"{1}\" and \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 113
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_180_HarrodsRegistrationForGhostG0CustomerWelcomeEmail")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G02")]
        [NUnit.Framework.CategoryAttribute("180_HarrodsRegistrationForGhostG0CustomerWelcomeEmail")]
        [NUnit.Framework.TestCaseAttribute("TC_180_HarrodsRegistrationForGhostG0CustomerWelcomeEmail", "TestDataSSCRegressionUpgrade", "G02", null)]
        public virtual void TC_180_HarrodsRegistrationForGhostG0CustomerWelcomeEmail(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G02",
                    "180_HarrodsRegistrationForGhostG0CustomerWelcomeEmail"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_180_HarrodsRegistrationForGhostG0CustomerWelcomeEmail", null, @__tags);
#line 120
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 121
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 122
 testRunner.When("I click on  signup to email button under footer of Harrods.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 123
 testRunner.And(string.Format("I perform SignUp action with a new user from Harrods.com {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
 testRunner.And("I perform email validation from yopmail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 127
 testRunner.When(string.Format("I perform and validate \"{0}\" customer register from Harrods.com by fetching data " +
                            "from \"{1}\" and \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 128
 testRunner.Then(string.Format("I perform the Welcome email validation from yopmail \"{0}\" \"{1}\" \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 129
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_226_CST_EnquiryTicket_GrantAdditional10Pct_Elite")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G07")]
        [NUnit.Framework.CategoryAttribute("226_CST_EnquiryTicket_GrantAdditional10Pct_Elite")]
        [NUnit.Framework.TestCaseAttribute("TC_226_CST_EnquiryTicket_GrantAdditional10Pct_Elite", "TestDataSSCRegressionUpgrade", "G07", null)]
        public virtual void TC_226_CST_EnquiryTicket_GrantAdditional10Pct_Elite(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G07",
                    "226_CST_EnquiryTicket_GrantAdditional10Pct_Elite"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_226_CST_EnquiryTicket_GrantAdditional10Pct_Elite", null, @__tags);
#line 137
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 138
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 140
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 143
 testRunner.And(string.Format("I create staff enquiry ticket for customer miscellaneous point addition {0} {1} {" +
                            "2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 144
 testRunner.Then(string.Format("I change the Target Tier and Validate whether the status points are automatically" +
                            " calculated and save the upgrade {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 145
 testRunner.And("I change the ticket status to Solved and closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 147
 testRunner.Then(string.Format("I validate the Customer Subject Details Category {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 148
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_249_BlackTierCustomer_Cancel_2_slot_of_prevBooked10pct")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G15")]
        [NUnit.Framework.CategoryAttribute("249_BlackTierCustomer_Cancel_2_slot_of_prevBooked10pct")]
        [NUnit.Framework.TestCaseAttribute("TC_249_BlackTierCustomer_Cancel_2_slot_of_prevBooked10pct", "TestDataSSCRegressionUpgrade", "G15", null)]
        public virtual void TC_249_BlackTierCustomer_Cancel_2_Slot_Of_PrevBooked10Pct(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G15",
                    "249_BlackTierCustomer_Cancel_2_slot_of_prevBooked10pct"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_249_BlackTierCustomer_Cancel_2_slot_of_prevBooked10pct", null, @__tags);
#line 157
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 158
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 159
 testRunner.When(string.Format("I login to Harrods with a \"{0}\" user from \"{1}\" \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 160
 testRunner.Then(string.Format("I verify whether 10 percent discount is displayed to user {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 161
 testRunner.And(string.Format("I cancel Day 2 slot and check remaining count {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 162
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_250_BlackTierCustomer_Book_1st_slot_aftercancellation")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G15")]
        [NUnit.Framework.CategoryAttribute("250_BlackTierCustomer_Book_1st_slot_aftercancellation")]
        [NUnit.Framework.TestCaseAttribute("TC_250_BlackTierCustomer_Book_1st_slot_aftercancellation", "TestDataSSCRegressionUpgrade", "G15", null)]
        public virtual void TC_250_BlackTierCustomer_Book_1St_Slot_Aftercancellation(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G15",
                    "250_BlackTierCustomer_Book_1st_slot_aftercancellation"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_250_BlackTierCustomer_Book_1st_slot_aftercancellation", null, @__tags);
#line 170
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 171
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 172
 testRunner.When(string.Format("I login to Harrods with a \"{0}\" user from \"{1}\" \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 173
 testRunner.Then(string.Format("I verify whether 10 percent discount is displayed to user {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 174
 testRunner.And(string.Format("I cancel Day 2 slot and check remaining count {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 175
 testRunner.And(string.Format("I reselect the Ten percent discount for the user {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 176
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_251_CST_Cancel2ndSlot_10Percent_FromSSC_onBlackTierCustomerRequest")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G15")]
        [NUnit.Framework.CategoryAttribute("251_CST_Cancel2ndSlot_10Percent_FromSSC_onBlackTierCustomerRequest")]
        [NUnit.Framework.TestCaseAttribute("TC_251_CST_Cancel2ndSlot_10Percent_FromSSC_onBlackTierCustomerRequest", "TestDataSSCRegressionUpgrade", "G15", null)]
        public virtual void TC_251_CST_Cancel2NdSlot_10Percent_FromSSC_OnBlackTierCustomerRequest(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G15",
                    "251_CST_Cancel2ndSlot_10Percent_FromSSC_onBlackTierCustomerRequest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_251_CST_Cancel2ndSlot_10Percent_FromSSC_onBlackTierCustomerRequest", null, @__tags);
#line 184
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 185
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 186
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 187
 testRunner.Then(string.Format("I should validate the count of Ten percent discount days in SSC {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 188
 testRunner.And(string.Format("I create a Cancellation Request Ticket of SlotTwo for the Customer {0} {1} {2} an" +
                            "d validate the remaining slots", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 189
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_291_CSTMember_Optin_Post_Phone_Email_SMS")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("291_CSTMember_Optin_Post_Phone_Email_SMS")]
        [NUnit.Framework.CategoryAttribute("E2ERun")]
        [NUnit.Framework.TestCaseAttribute("TC_291_CSTMember_Optin_Post_Phone_Email_SMS", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_291_CSTMember_Optin_Post_Phone_Email_SMS(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "291_CSTMember_Optin_Post_Phone_Email_SMS",
                    "E2ERun"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_291_CSTMember_Optin_Post_Phone_Email_SMS", null, @__tags);
#line 196
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 197
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 198
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 199
 testRunner.Then(string.Format("I \"Opt-In\" for \"Telephone,Letter,SMS,E-Mail\" for the user in {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 200
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 201
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 202
 testRunner.When(string.Format("I login to Harrods with a Registered user from \"{0}\" \"{1}\" \"{2}\"", excelFile, sheetName, userCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 203
 testRunner.And("I Navigate to the Harrods > Communication Preferences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 204
 testRunner.And(string.Format("I validate the Marketing consent \"Opt-In\" for \"phone,postal,sms,email\" for the us" +
                            "er in {0} {1} {2} as per selection in SSC", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 205
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_292_CSTMember_Optout_AllChannels")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("292_CSTMember_Optout_AllChannels")]
        [NUnit.Framework.CategoryAttribute("E2ERun")]
        [NUnit.Framework.TestCaseAttribute("TC_292_CSTMember_Optout_AllChannels", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_292_CSTMember_Optout_AllChannels(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "292_CSTMember_Optout_AllChannels",
                    "E2ERun"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_292_CSTMember_Optout_AllChannels", null, @__tags);
#line 212
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 213
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 214
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 215
 testRunner.Then(string.Format("I \"Opt-Out\" for \"Telephone,Letter,SMS,E-Mail,Publications\" for the user in {0} {1" +
                            "} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 216
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 217
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 218
 testRunner.When(string.Format("I login to Harrods with a Registered user from \"{0}\" \"{1}\" \"{2}\"", excelFile, sheetName, userCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 219
 testRunner.And("I Navigate to the Harrods > Communication Preferences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 220
 testRunner.And(string.Format("I validate the Marketing consent \"Opt-Out\" for \"phone,postal,sms,email,publicatio" +
                            "ns\" for the user in {0} {1} {2} as per selection in SSC", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 221
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_293_CSTMember_Optin_AllChannels")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("293_CSTMember_Optin_AllChannels")]
        [NUnit.Framework.CategoryAttribute("E2ERun")]
        [NUnit.Framework.TestCaseAttribute("TC_293_CSTMember_Optin_AllChannels", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_293_CSTMember_Optin_AllChannels(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "293_CSTMember_Optin_AllChannels",
                    "E2ERun"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_293_CSTMember_Optin_AllChannels", null, @__tags);
#line 228
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 229
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 230
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 231
 testRunner.Then(string.Format("I \"Opt-In\" for \"Telephone,Letter,SMS,E-Mail,Publications\" for the user in {0} {1}" +
                            " {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 232
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 233
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 234
 testRunner.When(string.Format("I login to Harrods with a Registered user from \"{0}\" \"{1}\" \"{2}\"", excelFile, sheetName, userCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 235
 testRunner.And("I Navigate to the Harrods > Communication Preferences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 236
 testRunner.And(string.Format("I validate the Marketing consent \"Opt-In\" for \"phone,postal,sms,email\" for the us" +
                            "er in {0} {1} {2} as per selection in SSC", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 237
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_294_CSTMember_Optout_AllInterests")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("294_CSTMember_Optout_AllInterests")]
        [NUnit.Framework.CategoryAttribute("E2ERun")]
        [NUnit.Framework.TestCaseAttribute("TC_294_CSTMember_Optout_AllInterests", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_294_CSTMember_Optout_AllInterests(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "294_CSTMember_Optout_AllInterests",
                    "E2ERun"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_294_CSTMember_Optout_AllInterests", null, @__tags);
#line 244
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 245
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 246
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 247
 testRunner.Then(string.Format("I \"Opt-Out\" All Interests for the user in {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 248
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 249
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 250
 testRunner.When(string.Format("I login to Harrods with a Registered user from \"{0}\" \"{1}\" \"{2}\"", excelFile, sheetName, userCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 251
 testRunner.And("I Navigate to the Harrods > Communication Preferences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 252
 testRunner.And("I validate whether all Interests are opted out for customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 253
 testRunner.Then("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_295_PhoneNumber_Accept_NumericValues")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("295_PhoneNumber_Accept_NumericValues")]
        [NUnit.Framework.TestCaseAttribute("TC_295_PhoneNumber_Accept_NumericValues", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_295_PhoneNumber_Accept_NumericValues(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "295_PhoneNumber_Accept_NumericValues"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_295_PhoneNumber_Accept_NumericValues", null, @__tags);
#line 262
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 263
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 264
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 265
 testRunner.Then(string.Format("I add new customer and validate phone number field \"GB - +44\" \"RRTT336621\" {0} {1" +
                            "} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 266
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_296_PhoneNumber_NotAllow_SpecialcharacterandSpace")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("296_PhoneNumber_NotAllow_SpecialcharacterandSpace")]
        [NUnit.Framework.TestCaseAttribute("TC_296_PhoneNumber_NotAllow_SpecialcharacterandSpace", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_296_PhoneNumber_NotAllow_SpecialcharacterandSpace(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "296_PhoneNumber_NotAllow_SpecialcharacterandSpace"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_296_PhoneNumber_NotAllow_SpecialcharacterandSpace", null, @__tags);
#line 274
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 275
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 276
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 277
 testRunner.Then(string.Format("I add new customer and validate phone number field \"GB - +44\" \"\'@#\'TT  662\'\" {0} " +
                            "{1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 278
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_297_UKPhonenumber_Startswith7")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("297_UKPhonenumber_Startswith7")]
        [NUnit.Framework.TestCaseAttribute("TC_297_UKPhonenumber_Startswith7", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_297_UKPhonenumber_Startswith7(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "297_UKPhonenumber_Startswith7"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_297_UKPhonenumber_Startswith7", null, @__tags);
#line 285
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 286
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 287
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 288
 testRunner.Then(string.Format("I add new customer and validate phone number field \"GB - +44\" \"9966225511\" {0} {1" +
                            "} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 289
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_298_UKPhonenumber_Length_is_10")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("298_UKPhonenumber_Length_is_10")]
        [NUnit.Framework.TestCaseAttribute("TC_298_UKPhonenumber_Length_is_10", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_298_UKPhonenumber_Length_Is_10(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "298_UKPhonenumber_Length_is_10"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_298_UKPhonenumber_Length_is_10", null, @__tags);
#line 296
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 297
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 298
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 299
 testRunner.Then(string.Format("I add new customer and validate phone number field \"GB - +44\" \"99662211\" {0} {1} " +
                            "{2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 300
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_299_InternationalPhonenumber")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("299_InternationalPhonenumber")]
        [NUnit.Framework.TestCaseAttribute("TC_299_InternationalPhonenumber", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_299_InternationalPhonenumber(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "299_InternationalPhonenumber"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_299_InternationalPhonenumber", null, @__tags);
#line 307
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 308
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 309
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 310
 testRunner.Then(string.Format("I add new customer and validate phone number field \"US - +1\" \"9966221144\" {0} {1}" +
                            " {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 311
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_300_NonUKPhonenumber_Length_min7")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("300_NonUKPhonenumber_Length_min7")]
        [NUnit.Framework.TestCaseAttribute("TC_300_NonUKPhonenumber_Length_min7", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_300_NonUKPhonenumber_Length_Min7(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "300_NonUKPhonenumber_Length_min7"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_300_NonUKPhonenumber_Length_min7", null, @__tags);
#line 318
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 319
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 320
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 321
 testRunner.Then(string.Format("I add new customer and validate phone number field \"US - +1\" \"996622\" {0} {1} {2}" +
                            "", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 322
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_301_IncorrectFormat_Phonenumber")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("301_IncorrectFormat_Phonenumber")]
        [NUnit.Framework.TestCaseAttribute("TC_301_IncorrectFormat_Phonenumber", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_301_IncorrectFormat_Phonenumber(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "301_IncorrectFormat_Phonenumber"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_301_IncorrectFormat_Phonenumber", null, @__tags);
#line 329
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 330
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 331
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 332
 testRunner.Then(string.Format("I add new customer and validate phone number field \"GB - +44\" \"1231231234\" {0} {1" +
                            "} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 333
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_302_Phonenumber_inclDialcode_Length_Max_13")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("302_Phonenumber_inclDialcode_Length_Max_13")]
        [NUnit.Framework.TestCaseAttribute("TC_302_Phonenumber_inclDialcode_Length_Max_13", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_302_Phonenumber_InclDialcode_Length_Max_13(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "302_Phonenumber_inclDialcode_Length_Max_13"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_302_Phonenumber_inclDialcode_Length_Max_13", null, @__tags);
#line 340
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 341
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 342
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 343
 testRunner.Then(string.Format("I add new customer and validate phone number field \"GB - +44\" \"996622114421\" {0} " +
                            "{1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 344
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_303_AddPhonenumber_CustomersFirstnumber")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("303_AddPhonenumber_CustomersFirstnumber")]
        [NUnit.Framework.TestCaseAttribute("TC_303_AddPhonenumber_CustomersFirstnumber", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_303_AddPhonenumber_CustomersFirstnumber(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "303_AddPhonenumber_CustomersFirstnumber"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_303_AddPhonenumber_CustomersFirstnumber", null, @__tags);
#line 351
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 352
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 353
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 354
 testRunner.Then(string.Format("I add new \"UK\" Phonenumber for the user in SSC {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 355
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_304_DeletePhonenumber")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("304_DeletePhonenumber")]
        [NUnit.Framework.TestCaseAttribute("TC_304_DeletePhonenumber", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_304_DeletePhonenumber(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "304_DeletePhonenumber"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_304_DeletePhonenumber", null, @__tags);
#line 362
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 363
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 364
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 365
 testRunner.Then(string.Format("I delete \"UK\" Phonenumber for the user in SSC {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 366
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_305_CreateNewCustomer_withMobilenumber_Updated_to_othersystems")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("305_CreateNewCustomer_withMobilenumber_Updated_to_othersystems")]
        [NUnit.Framework.TestCaseAttribute("TC_305_CreateNewCustomer_withMobilenumber_Updated_to_othersystems", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_305_CreateNewCustomer_WithMobilenumber_Updated_To_Othersystems(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "305_CreateNewCustomer_withMobilenumber_Updated_to_othersystems"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_305_CreateNewCustomer_withMobilenumber_Updated_to_othersystems", null, @__tags);
#line 373
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 374
 testRunner.Given("I launch the \"SSC\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 375
 testRunner.When("I Navigate to SSC > Customers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 376
 testRunner.Then(string.Format("I add a new customer {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 377
 testRunner.And("I validate whether the user created is a duplicate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 378
 testRunner.Then(string.Format("I add new \"UK\" Phonenumber for the user in SSC {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 379
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_306_AddMobilenumber_fromHarrods_Updated_to_othersystems")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("306_AddMobilenumber_fromHarrods_Updated_to_othersystems")]
        [NUnit.Framework.TestCaseAttribute("TC_306_AddMobilenumber_fromHarrods_Updated_to_othersystems", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_306_AddMobilenumber_FromHarrods_Updated_To_Othersystems(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "306_AddMobilenumber_fromHarrods_Updated_to_othersystems"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_306_AddMobilenumber_fromHarrods_Updated_to_othersystems", null, @__tags);
#line 386
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 387
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 388
 testRunner.When(string.Format("I login to Harrods with a \"{0}\" user from \"{1}\" \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 389
 testRunner.Then(string.Format("I add new \"UK\" phone number to the user born {0} {1} {2}", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 390
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_307_UpdateMobilenumber_fromHarrods_Updated_to_othersystems")]
        [NUnit.Framework.CategoryAttribute("SVCRegression")]
        [NUnit.Framework.CategoryAttribute("G01")]
        [NUnit.Framework.CategoryAttribute("307_UpdateMobilenumber_fromHarrods_Updated_to_othersystems")]
        [NUnit.Framework.TestCaseAttribute("TC_307_UpdateMobilenumber_fromHarrods_Updated_to_othersystems", "TestDataSSCRegressionUpgrade", "G01", null)]
        public virtual void TC_307_UpdateMobilenumber_FromHarrods_Updated_To_Othersystems(string userCategory, string excelFile, string sheetName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "SVCRegression",
                    "G01",
                    "307_UpdateMobilenumber_fromHarrods_Updated_to_othersystems"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_307_UpdateMobilenumber_fromHarrods_Updated_to_othersystems", null, @__tags);
#line 397
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 398
 testRunner.Given("I launch the \"Harrods\" website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 399
 testRunner.When(string.Format("I login to Harrods with a \"{0}\" user from \"{1}\" \"{2}\"", userCategory, excelFile, sheetName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 400
 testRunner.Then(string.Format("I edit \"UK\" Phonenumber of the user {0} {1} {2}", excelFile, sheetName, userCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 401
 testRunner.And("I close the browser window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
